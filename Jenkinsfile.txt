pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo 'Building the code...'
                // Example using Maven
                sh 'mvn clean package'
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                echo 'Running Unit and Integration Tests...'
                // Example using JUnit or TestNG
                sh 'mvn test'
            }
        }

        stage('Code Analysis') {
            steps {
                echo 'Running Code Analysis...'
                // Example using SonarQube
                sh 'sonar-scanner'
            }
        }

        stage('Security Scan') {
            steps {
                echo 'Performing Security Scan...'
                // Example using OWASP Dependency-Check or Snyk
                sh 'dependency-check.sh --project Jenkins'
            }
        }

        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to Staging...'
                // Example deployment step (SSH to AWS EC2)
                sh 'scp -i your-key.pem target/your-app.war ec2-user@your-staging-server:/path/to/deploy'
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                echo 'Running Integration Tests on Staging...'
                // Example integration tests using Selenium
                sh 'mvn verify -Pstaging'
            }
        }

        stage('Deploy to Production') {
            steps {
                echo 'Deploying to Production...'
                // Example deployment step (SSH to AWS EC2)
                sh 'scp -i your-key.pem target/your-app.war ec2-user@your-production-server:/path/to/deploy'
            }
        }
    }

    post {
        always {
            echo 'Sending notifications...'
        }
        success {
            emailext (
                to: 'developer@example.com',
                subject: "Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' success",
                body: "Build was successful.",
                attachLog: true
            )
        }
        failure {
            emailext (
                to: 'developer@example.com',
                subject: "Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' failure",
                body: "Build failed. Please check the logs.",
                attachLog: true
            )
        }
    }
}
